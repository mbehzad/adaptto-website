{"version":3,"file":"image-gallery-be1ea384.js","sources":["../blocks/image-gallery/image-gallery.js"],"sourcesContent":["import { createOptimizedPicture } from '../../scripts/lib-franklin.js';\nimport { append } from '../../scripts/utils/dom.js';\nimport html from '../../scripts/utils/htmlTemplateTag.js';\n\nconst hashPattern = /^#(fullscreen-)?image-(\\d{1,4})$/;\n\n/**\n * Current display state.\n */\nclass State {\n  /**\n   * @returns {number} Current image index\n   */\n  index;\n\n  /**\n   * @returns {number} Fullscreen display\n   */\n  fullscreen;\n}\n\n/**\n * Gets current image display state from hash (defaults to first image).\n * @param {string[]} imageUrls  Image URLs\n * @returns {State} State\n */\nfunction getStateFromHash(imageUrls) {\n  const state = new State();\n  const hashMatch = window.location.hash.match(hashPattern);\n  if (hashMatch) {\n    state.index = parseInt(hashMatch[2], 10) - 1;\n    state.fullscreen = hashMatch[1] !== undefined;\n  } else {\n    state.index = 0;\n    state.fullscreen = false;\n  }\n  if (state.index < 0 || state.index > imageUrls.length - 1) {\n    state.index = 0;\n  }\n  return state;\n}\n\n/**\n * Builds location has to address image.\n * @param {number} index Image index\n * @param {boolean} fullscreen Full screen mode\n * @returns {string} Hash\n */\nfunction buildHash(index, fullscreen) {\n  const fullscreenSuffix = fullscreen ? 'fullscreen-' : '';\n  return `#${fullscreenSuffix}image-${index + 1}`;\n}\n\n/**\n * Display selected image in given container (page or fullscreen).\n * @param {Element} parent Parent element\n * @param {string[]} imageUrls Image URLs\n * @param {number} index Image index\n * @param {boolean} fullscreen Fullscreen mode\n */\nfunction displayImage(parent, imageUrls, index, fullscreen) {\n  // display image\n  const breakpoints = fullscreen\n    ? [{ media: '(min-width: 500px)', width: 2048 }, { width: 1024 }]\n    : [{ media: '(min-width: 500px)', width: 980 }, { width: 490 }];\n  const picture = createOptimizedPicture(imageUrls[index], '', true, breakpoints);\n  picture.classList.add('gallery-image');\n  parent.querySelector('.gallery-placeholder').replaceChildren(picture);\n\n  // navigation links\n  let previousIndex = index - 1;\n  if (previousIndex < 0) {\n    previousIndex = imageUrls.length - 1;\n  }\n  let nextIndex = index + 1;\n  if (nextIndex > imageUrls.length - 1) {\n    nextIndex = 0;\n  }\n  parent.querySelector('.gallery-prev').href = buildHash(previousIndex, fullscreen);\n  parent.querySelector('.gallery-next').href = buildHash(nextIndex, fullscreen);\n\n  // full screen mode open/close buttons\n  const fullscreenButton = parent.querySelector('.gallery-fullscreen-btn');\n  if (fullscreenButton) {\n    fullscreenButton.href = buildHash(index, true);\n  }\n  const fullscreenCloseButton = parent.querySelector('.lb-close-btn');\n  if (fullscreenCloseButton) {\n    fullscreenCloseButton.href = buildHash(index, false);\n  }\n}\n\n/**\n * Creates overlay markup to display image in fullscreen mode.\n * @returns {Element} Overlay element added to body.\n */\nfunction createOverlay() {\n  let overlay = document.body.querySelector(':scope > #image-gallery-overlay');\n  if (!overlay) {\n    overlay = append(document.body, 'div', 'image-gallery');\n    overlay.id = 'image-gallery-overlay';\n    overlay.innerHTML = html`<a class=\"lb-close-btn\">Close</a>\n      <div class=\"lb-content\">\n        <div class=\"lb-gallery\">\n          <div class=\"gallery-stage\">\n            <a class=\"gallery-prev\">Previous</a>\n            <div class=\"gallery-placeholder\"></div>\n            <a class=\"gallery-next\">Next</a>\n          </div>\n        </div>\n      </div>`;\n  }\n  return overlay;\n}\n\n/**\n * Removes overlay markup.\n */\nfunction removeOverlay() {\n  const overlay = document.body.querySelector(':scope > #image-gallery-overlay');\n  if (overlay) {\n    document.body.removeChild(overlay);\n  }\n}\n\n/**\n * Displays image as addressed via current hash.\n * @param {Element} block Block element\n * @param {string[]} imageUrls  Image URLs\n */\nfunction displayCurrentStateImage(block, imageUrls) {\n  const state = getStateFromHash(imageUrls);\n  displayImage(block, imageUrls, state.index, false);\n  if (state.fullscreen) {\n    const overlay = createOverlay();\n    displayImage(overlay, imageUrls, state.index, true);\n    document.body.classList.add('image-gallery-overlay');\n  } else {\n    removeOverlay();\n    document.body.classList.remove('image-gallery-overlay');\n  }\n}\n\n/**\n * Image Gallery.\n * @param {Element} block\n */\nexport default function decorate(block) {\n  // collect list of all image gallery URLs\n  const imageUrls = Array.from(block.querySelectorAll('picture'))\n    .map((picture) => picture.querySelector('img')?.src)\n    .filter((url) => url !== undefined);\n  if (imageUrls.length === 0) {\n    return;\n  }\n\n  // build gallery markup\n  block.innerHTML = html`<div class=\"gallery-stage\">\n      <a class=\"gallery-prev\">Previous</a>\n      <div class=\"gallery-placeholder\"></div>\n      <a class=\"gallery-next\">Next</a>\n      <a class=\"gallery-fullscreen-btn\" title=\"Fullscreen\">Fullscreen</a>\n    </div>\n    <ul class=\"gallery-thumb-list\"></ul>`;\n\n  // list of image thumbnails\n  const thumbList = block.querySelector('.gallery-thumb-list');\n  imageUrls.forEach((imageUrl, index) => {\n    const li = append(thumbList, 'li');\n    const a = append(li, 'a', 'gallery-thumb');\n    a.href = buildHash(index, false);\n    const eager = (index <= 7);\n    a.append(createOptimizedPicture(imageUrl, '', eager, [{ width: '100' }]));\n  });\n\n  // react to stage changes via hash\n  window.addEventListener('hashchange', () => displayCurrentStateImage(block, imageUrls));\n  displayCurrentStateImage(block, imageUrls);\n}\n"],"names":["hashPattern","State","index","fullscreen","buildHash","displayImage","parent","imageUrls","breakpoints","media","width","picture","createOptimizedPicture","classList","add","querySelector","replaceChildren","previousIndex","length","nextIndex","href","fullscreenButton","fullscreenCloseButton","displayCurrentStateImage","block","state","hashMatch","window","location","hash","match","parseInt","undefined","getStateFromHash","overlay","document","body","append","id","innerHTML","html","createOverlay","removeChild","removeOverlay","remove","decorate","Array","from","querySelectorAll","map","src","filter","url","thumbList","forEach","imageUrl","li","a","eager","addEventListener"],"mappings":"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"}