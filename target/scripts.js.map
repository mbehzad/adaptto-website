{"version":3,"file":"scripts.js","sources":["../scripts/lib-franklin.js","../scripts/services/Link.js","../scripts/services/LinkHandler.js","../scripts/utils/dom.js","../scripts/utils/fetch.js","../scripts/utils/path.js","../scripts/utils/metadata.js","../scripts/services/QueryIndexItem.js","../scripts/services/QueryIndex.js","../scripts/utils/site.js","../scripts/scripts.js"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/**\n * log RUM if part of the sample.\n * @param {string} checkpoint identifies the checkpoint in funnel\n * @param {Object} data additional data for RUM sample\n */\nexport function sampleRUM(checkpoint, data = {}) {\n  sampleRUM.defer = sampleRUM.defer || [];\n  const defer = (fnname) => {\n    sampleRUM[fnname] = sampleRUM[fnname]\n      || ((...args) => sampleRUM.defer.push({ fnname, args }));\n  };\n  sampleRUM.drain = sampleRUM.drain\n    || ((dfnname, fn) => {\n      sampleRUM[dfnname] = fn;\n      sampleRUM.defer\n        .filter(({ fnname }) => dfnname === fnname)\n        .forEach(({ fnname, args }) => sampleRUM[fnname](...args));\n    });\n  sampleRUM.on = (chkpnt, fn) => { sampleRUM.cases[chkpnt] = fn; };\n  defer('observe');\n  defer('cwv');\n  try {\n    window.hlx = window.hlx || {};\n    if (!window.hlx.rum) {\n      const usp = new URLSearchParams(window.location.search);\n      const weight = (usp.get('rum') === 'on') ? 1 : 100; // with parameter, weight is 1. Defaults to 100.\n      // eslint-disable-next-line no-bitwise\n      const hashCode = (s) => s.split('').reduce((a, b) => (((a << 5) - a) + b.charCodeAt(0)) | 0, 0);\n      const id = `${hashCode(window.location.href)}-${new Date().getTime()}-${Math.random().toString(16).substr(2, 14)}`;\n      const random = Math.random();\n      const isSelected = (random * weight < 1);\n      // eslint-disable-next-line object-curly-newline\n      window.hlx.rum = { weight, id, random, isSelected, sampleRUM };\n    }\n    const { weight, id } = window.hlx.rum;\n    if (window.hlx && window.hlx.rum && window.hlx.rum.isSelected) {\n      const sendPing = (pdata = data) => {\n        // eslint-disable-next-line object-curly-newline, max-len, no-use-before-define\n        const body = JSON.stringify({ weight, id, referer: window.location.href, generation: window.hlx.RUM_GENERATION, checkpoint, ...data });\n        const url = `https://rum.hlx.page/.rum/${weight}`;\n        // eslint-disable-next-line no-unused-expressions\n        navigator.sendBeacon(url, body);\n        // eslint-disable-next-line no-console\n        console.debug(`ping:${checkpoint}`, pdata);\n      };\n      sampleRUM.cases = sampleRUM.cases || {\n        cwv: () => sampleRUM.cwv(data) || true,\n        lazy: () => {\n          // use classic script to avoid CORS issues\n          const script = document.createElement('script');\n          script.src = 'https://rum.hlx.page/.rum/@adobe/helix-rum-enhancer@^1/src/index.js';\n          document.head.appendChild(script);\n          return true;\n        },\n      };\n      sendPing(data);\n      if (sampleRUM.cases[checkpoint]) { sampleRUM.cases[checkpoint](); }\n    }\n  } catch (error) {\n    // something went wrong\n  }\n}\n\n/**\n * Loads a CSS file.\n * @param {string} href The path to the CSS file\n */\nexport function loadCSS(href, callback) {\n  if (!document.querySelector(`head > link[href=\"${href}\"]`)) {\n    const link = document.createElement('link');\n    link.setAttribute('rel', 'stylesheet');\n    link.setAttribute('href', href);\n    if (typeof callback === 'function') {\n      link.onload = (e) => callback(e.type);\n      link.onerror = (e) => callback(e.type);\n    }\n    document.head.appendChild(link);\n  } else if (typeof callback === 'function') {\n    callback('noop');\n  }\n}\n\n/**\n * Retrieves the content of metadata tags.\n * @param {string} name The metadata name (or property)\n * @returns {string} The metadata value(s)\n */\nexport function getMetadata(name) {\n  const attr = name && name.includes(':') ? 'property' : 'name';\n  const meta = [...document.head.querySelectorAll(`meta[${attr}=\"${name}\"]`)].map((m) => m.content).join(', ');\n  return meta || '';\n}\n\n/**\n * Sanitizes a name for use as class name.\n * @param {string} name The unsanitized name\n * @returns {string} The class name\n */\nexport function toClassName(name) {\n  return typeof name === 'string'\n    ? name.toLowerCase().replace(/[^0-9a-z]/gi, '-').replace(/-+/g, '-').replace(/^-|-$/g, '')\n    : '';\n}\n\n/*\n * Sanitizes a name for use as a js property name.\n * @param {string} name The unsanitized name\n * @returns {string} The camelCased name\n */\nexport function toCamelCase(name) {\n  return toClassName(name).replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n}\n\n/**\n * Replace icons with inline SVG and prefix with codeBasePath.\n * @param {Element} element\n */\nexport function decorateIcons(element = document) {\n  element.querySelectorAll('span.icon').forEach(async (span) => {\n    if (span.classList.length < 2 || !span.classList[1].startsWith('icon-')) {\n      return;\n    }\n    const icon = span.classList[1].substring(5);\n    // eslint-disable-next-line no-use-before-define\n    const resp = await fetch(`${window.hlx.codeBasePath}/icons/${icon}.svg`);\n    if (resp.ok) {\n      const iconHTML = await resp.text();\n      if (iconHTML.match(/<style/i)) {\n        const img = document.createElement('img');\n        img.src = `data:image/svg+xml,${encodeURIComponent(iconHTML)}`;\n        span.appendChild(img);\n      } else {\n        span.innerHTML = iconHTML;\n      }\n    }\n  });\n}\n\n/**\n * Gets placeholders object\n * @param {string} prefix\n */\nexport async function fetchPlaceholders(prefix = 'default') {\n  window.placeholders = window.placeholders || {};\n  const loaded = window.placeholders[`${prefix}-loaded`];\n  if (!loaded) {\n    window.placeholders[`${prefix}-loaded`] = new Promise((resolve, reject) => {\n      try {\n        fetch(`${prefix === 'default' ? '' : prefix}/placeholders.json`)\n          .then((resp) => resp.json())\n          .then((json) => {\n            const placeholders = {};\n            json.data.forEach((placeholder) => {\n              placeholders[toCamelCase(placeholder.Key)] = placeholder.Text;\n            });\n            window.placeholders[prefix] = placeholders;\n            resolve();\n          });\n      } catch (error) {\n        // error loading placeholders\n        window.placeholders[prefix] = {};\n        reject();\n      }\n    });\n  }\n  await window.placeholders[`${prefix}-loaded`];\n  return window.placeholders[prefix];\n}\n\n/**\n * Decorates a block.\n * @param {Element} block The block element\n */\nexport function decorateBlock(block) {\n  const shortBlockName = block.classList[0];\n  if (shortBlockName) {\n    block.classList.add('block');\n    block.setAttribute('data-block-name', shortBlockName);\n    block.setAttribute('data-block-status', 'initialized');\n    const blockWrapper = block.parentElement;\n    blockWrapper.classList.add(`${shortBlockName}-wrapper`);\n    const section = block.closest('.section');\n    if (section) section.classList.add(`${shortBlockName}-container`);\n  }\n}\n\n/**\n * Extracts the config from a block.\n * @param {Element} block The block element\n * @returns {object} The block config\n */\nexport function readBlockConfig(block) {\n  const config = {};\n  block.querySelectorAll(':scope>div').forEach((row) => {\n    if (row.children) {\n      const cols = [...row.children];\n      if (cols[1]) {\n        const col = cols[1];\n        const name = toClassName(cols[0].textContent);\n        let value = '';\n        if (col.querySelector('a')) {\n          const as = [...col.querySelectorAll('a')];\n          if (as.length === 1) {\n            value = as[0].href;\n          } else {\n            value = as.map((a) => a.href);\n          }\n        } else if (col.querySelector('img')) {\n          const imgs = [...col.querySelectorAll('img')];\n          if (imgs.length === 1) {\n            value = imgs[0].src;\n          } else {\n            value = imgs.map((img) => img.src);\n          }\n        } else if (col.querySelector('p')) {\n          const ps = [...col.querySelectorAll('p')];\n          if (ps.length === 1) {\n            value = ps[0].textContent;\n          } else {\n            value = ps.map((p) => p.textContent);\n          }\n        } else value = row.children[1].textContent;\n        config[name] = value;\n      }\n    }\n  });\n  return config;\n}\n\n/**\n * Decorates all sections in a container element.\n * @param {Element} $main The container element\n */\nexport function decorateSections(main) {\n  main.querySelectorAll(':scope > div').forEach((section) => {\n    const wrappers = [];\n    let defaultContent = false;\n    [...section.children].forEach((e) => {\n      if (e.tagName === 'DIV' || !defaultContent) {\n        const wrapper = document.createElement('div');\n        wrappers.push(wrapper);\n        defaultContent = e.tagName !== 'DIV';\n        if (defaultContent) wrapper.classList.add('default-content-wrapper');\n      }\n      wrappers[wrappers.length - 1].append(e);\n    });\n    wrappers.forEach((wrapper) => section.append(wrapper));\n    section.classList.add('section');\n    section.setAttribute('data-section-status', 'initialized');\n\n    /* process section metadata */\n    const sectionMeta = section.querySelector('div.section-metadata');\n    if (sectionMeta) {\n      const meta = readBlockConfig(sectionMeta);\n      Object.keys(meta).forEach((key) => {\n        if (key === 'style') {\n          const styles = meta.style.split(',').map((style) => toClassName(style.trim()));\n          styles.forEach((style) => section.classList.add(style));\n        } else {\n          section.dataset[toCamelCase(key)] = meta[key];\n        }\n      });\n      sectionMeta.parentNode.remove();\n    }\n  });\n}\n\n/**\n * Updates all section status in a container element.\n * @param {Element} main The container element\n */\nexport function updateSectionsStatus(main) {\n  const sections = [...main.querySelectorAll(':scope > div.section')];\n  for (let i = 0; i < sections.length; i += 1) {\n    const section = sections[i];\n    const status = section.getAttribute('data-section-status');\n    if (status !== 'loaded') {\n      const loadingBlock = section.querySelector('.block[data-block-status=\"initialized\"], .block[data-block-status=\"loading\"]');\n      if (loadingBlock) {\n        section.setAttribute('data-section-status', 'loading');\n        break;\n      } else {\n        section.setAttribute('data-section-status', 'loaded');\n      }\n    }\n  }\n}\n\n/**\n * Decorates all blocks in a container element.\n * @param {Element} main The container element\n */\nexport function decorateBlocks(main) {\n  main\n    .querySelectorAll('div.section > div > div')\n    .forEach(decorateBlock);\n}\n\n/**\n * Builds a block DOM Element from a two dimensional array\n * @param {string} blockName name of the block\n * @param {any} content two dimensional array or string or object of content\n */\nexport function buildBlock(blockName, content) {\n  const table = Array.isArray(content) ? content : [[content]];\n  const blockEl = document.createElement('div');\n  // build image block nested div structure\n  blockEl.classList.add(blockName);\n  table.forEach((row) => {\n    const rowEl = document.createElement('div');\n    row.forEach((col) => {\n      const colEl = document.createElement('div');\n      const vals = col.elems ? col.elems : [col];\n      vals.forEach((val) => {\n        if (val) {\n          if (typeof val === 'string') {\n            colEl.innerHTML += val;\n          } else {\n            colEl.appendChild(val);\n          }\n        }\n      });\n      rowEl.appendChild(colEl);\n    });\n    blockEl.appendChild(rowEl);\n  });\n  return (blockEl);\n}\n\n/**\n * Loads JS and CSS for a block.\n * @param {Element} block The block element\n */\nexport async function loadBlock(block) {\n  const status = block.getAttribute('data-block-status');\n  if (status !== 'loading' && status !== 'loaded') {\n    block.setAttribute('data-block-status', 'loading');\n    const blockName = block.getAttribute('data-block-name');\n    try {\n      const cssLoaded = new Promise((resolve) => {\n        loadCSS(`${window.hlx.codeBasePath}/blocks/${blockName}/${blockName}.css`, resolve);\n      });\n      const decorationComplete = new Promise((resolve) => {\n        (async () => {\n          try {\n            const mod = await import(`../blocks/${blockName}/${blockName}.js`);\n            if (mod.default) {\n              await mod.default(block);\n            }\n          } catch (error) {\n            // eslint-disable-next-line no-console\n            console.log(`failed to load module for ${blockName}`, error);\n          }\n          resolve();\n        })();\n      });\n      await Promise.all([cssLoaded, decorationComplete]);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(`failed to load block ${blockName}`, error);\n    }\n    block.setAttribute('data-block-status', 'loaded');\n  }\n}\n\n/**\n * Loads JS and CSS for all blocks in a container element.\n * @param {Element} main The container element\n */\nexport async function loadBlocks(main) {\n  updateSectionsStatus(main);\n  const blocks = [...main.querySelectorAll('div.block')];\n  for (let i = 0; i < blocks.length; i += 1) {\n    // eslint-disable-next-line no-await-in-loop\n    await loadBlock(blocks[i]);\n    updateSectionsStatus(main);\n  }\n}\n\n/**\n * Returns a picture element with webp and fallbacks\n * @param {string} src The image URL\n * @param {boolean} eager load image eager\n * @param {Array} breakpoints breakpoints and corresponding params (eg. width)\n */\nexport function createOptimizedPicture(src, alt = '', eager = false, breakpoints = [{ media: '(min-width: 400px)', width: '2000' }, { width: '750' }]) {\n  const url = new URL(src, window.location.href);\n  const picture = document.createElement('picture');\n  const { pathname } = url;\n  const ext = pathname.substring(pathname.lastIndexOf('.') + 1);\n\n  // webp\n  breakpoints.forEach((br) => {\n    const source = document.createElement('source');\n    if (br.media) source.setAttribute('media', br.media);\n    source.setAttribute('type', 'image/webp');\n    source.setAttribute('srcset', `${pathname}?width=${br.width}&format=webply&optimize=medium`);\n    picture.appendChild(source);\n  });\n\n  // fallback\n  breakpoints.forEach((br, i) => {\n    if (i < breakpoints.length - 1) {\n      const source = document.createElement('source');\n      if (br.media) source.setAttribute('media', br.media);\n      source.setAttribute('srcset', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n      picture.appendChild(source);\n    } else {\n      const img = document.createElement('img');\n      img.setAttribute('loading', eager ? 'eager' : 'lazy');\n      img.setAttribute('alt', alt);\n      picture.appendChild(img);\n      img.setAttribute('src', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n    }\n  });\n\n  return picture;\n}\n\n/**\n * Normalizes all headings within a container element.\n * @param {Element} el The container element\n * @param {[string]} allowedHeadings The list of allowed headings (h1 ... h6)\n */\nexport function normalizeHeadings(el, allowedHeadings) {\n  const allowed = allowedHeadings.map((h) => h.toLowerCase());\n  el.querySelectorAll('h1, h2, h3, h4, h5, h6').forEach((tag) => {\n    const h = tag.tagName.toLowerCase();\n    if (allowed.indexOf(h) === -1) {\n      // current heading is not in the allowed list -> try first to \"promote\" the heading\n      let level = parseInt(h.charAt(1), 10) - 1;\n      while (allowed.indexOf(`h${level}`) === -1 && level > 0) {\n        level -= 1;\n      }\n      if (level === 0) {\n        // did not find a match -> try to \"downgrade\" the heading\n        while (allowed.indexOf(`h${level}`) === -1 && level < 7) {\n          level += 1;\n        }\n      }\n      if (level !== 7) {\n        tag.outerHTML = `<h${level} id=\"${tag.id}\">${tag.textContent}</h${level}>`;\n      }\n    }\n  });\n}\n\n/**\n * Set template (page structure) and theme (page styles).\n */\nexport function decorateTemplateAndTheme() {\n  const addClasses = (elem, classes) => {\n    classes.split(',').forEach((v) => {\n      elem.classList.add(toClassName(v.trim()));\n    });\n  };\n  const template = getMetadata('template');\n  if (template) addClasses(document.body, template);\n  const theme = getMetadata('theme');\n  if (theme) addClasses(document.body, theme);\n}\n\n/**\n * decorates paragraphs containing a single link as buttons.\n * @param {Element} element container element\n */\n\nexport function decorateButtons(element) {\n  element.querySelectorAll('a').forEach((a) => {\n    a.title = a.title || a.textContent;\n    if (a.href !== a.textContent) {\n      const up = a.parentElement;\n      const twoup = a.parentElement.parentElement;\n      if (!a.querySelector('img')) {\n        if (up.childNodes.length === 1 && (up.tagName === 'P' || up.tagName === 'DIV')) {\n          a.className = 'button primary'; // default\n          up.classList.add('button-container');\n        }\n        if (up.childNodes.length === 1 && up.tagName === 'STRONG'\n          && twoup.childNodes.length === 1 && twoup.tagName === 'P') {\n          a.className = 'button primary';\n          twoup.classList.add('button-container');\n        }\n        if (up.childNodes.length === 1 && up.tagName === 'EM'\n          && twoup.childNodes.length === 1 && twoup.tagName === 'P') {\n          a.className = 'button secondary';\n          twoup.classList.add('button-container');\n        }\n      }\n    }\n  });\n}\n\n/**\n * load LCP block and/or wait for LCP in default content.\n */\nexport async function waitForLCP(lcpBlocks) {\n  const block = document.querySelector('.block');\n  const hasLCPBlock = (block && lcpBlocks.includes(block.getAttribute('data-block-name')));\n  if (hasLCPBlock) await loadBlock(block);\n\n  document.querySelector('body').classList.add('appear');\n  const lcpCandidate = document.querySelector('main img');\n  await new Promise((resolve) => {\n    if (lcpCandidate && !lcpCandidate.complete) {\n      lcpCandidate.setAttribute('loading', 'eager');\n      lcpCandidate.addEventListener('load', resolve);\n      lcpCandidate.addEventListener('error', resolve);\n    } else {\n      resolve();\n    }\n  });\n}\n\n/**\n * loads a block named 'header' into header\n */\nexport function loadHeader(header) {\n  const headerBlock = buildBlock('header', '');\n  header.append(headerBlock);\n  decorateBlock(headerBlock);\n  return loadBlock(headerBlock);\n}\n\n/**\n * loads a block named 'footer' into footer\n */\nexport function loadFooter(footer) {\n  const footerBlock = buildBlock('footer', '');\n  footer.append(footerBlock);\n  decorateBlock(footerBlock);\n  return loadBlock(footerBlock);\n}\n\n/**\n * setup block utils\n */\nexport function setup() {\n  window.hlx = window.hlx || {};\n  window.hlx.codeBasePath = '';\n  window.hlx.lighthouse = new URLSearchParams(window.location.search).get('lighthouse') === 'on';\n\n  const scriptEl = document.querySelector('script[src$=\"/scripts/scripts.js\"]');\n  if (scriptEl) {\n    try {\n      [window.hlx.codeBasePath] = new URL(scriptEl.src).pathname.split('/scripts/scripts.js');\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  }\n}\n\n/**\n * auto init\n */\nfunction init() {\n  setup();\n  sampleRUM('top');\n\n  window.addEventListener('load', () => sampleRUM('load'));\n\n  window.addEventListener('unhandledrejection', (event) => {\n    sampleRUM('error', { source: event.reason.sourceURL, target: event.reason.line });\n  });\n\n  window.addEventListener('error', (event) => {\n    sampleRUM('error', { source: event.filename, target: event.lineno });\n  });\n}\n\ninit();\n","const adaptToSiteUrlRegex = /^https?:\\/\\/([^/.]+--adaptto-website--adaptto.hlx.(page|live)|adapt.to|localhost:\\d+)(\\/.+)$/;\nconst adaptToSiteUrlPathnameGroup = 3;\nconst downloadUrlRegex = /^.+\\.(pdf|zip)$/;\n\n/**\n * Encapsulates a link URL to inspect it parts.\n */\nexport default class Link {\n  /**\n   * @param {string} url URL (with or without host name).\n   */\n  constructor(url) {\n    this.url = url;\n    this.adaptToSiteUrlMatch = this.url.match(adaptToSiteUrlRegex);\n  }\n\n  /**\n   * @returns {boolean} true if URL points to adaptTo() site.\n   */\n  isAdaptToSiteUrl() {\n    return this.adaptToSiteUrlMatch != null;\n  }\n\n  /**\n   * @returns {string} Local path to adaptTo() site without host name.\n   */\n  getAdaptToSiteUrlPath() {\n    return this.adaptToSiteUrlMatch[adaptToSiteUrlPathnameGroup];\n  }\n\n  /**\n   * @returns {boolean} true if URL points to a download file.\n   */\n  isDownload() {\n    return this.url.match(downloadUrlRegex) != null;\n  }\n}\n","import Link from './Link.js';\n\n/**\n * Processes an URL with link handler: Removes host name if link points to adaptTo() website.\n * This ensures a publish website never links to a preview website and vice versa.\n * @param {string} url URL\n * @returns {string} Processed URL\n */\nexport function rewriteUrl(url) {\n  if (url) {\n    const link = new Link(url);\n    if (link.isAdaptToSiteUrl()) {\n      return link.getAdaptToSiteUrlPath();\n    }\n  }\n  return url;\n}\n\n/**\n * Decorates anchor and Link URL:\n * - Rewrites Link url using rewriteUrl\n * - Sets target='_blank' for external links\n * - Applies download attribute for download links\n * @param {Element} a Anchor to decorate\n * @returns {Element} Anchor element\n */\nexport function decorateAnchor(a) {\n  const url = a.href;\n  if (url) {\n    const link = new Link(url);\n    if (link.isAdaptToSiteUrl()) {\n      a.href = link.getAdaptToSiteUrlPath();\n      if (link.isDownload()) {\n        a.setAttribute('download', '');\n      }\n    } else {\n      a.target = '_blank';\n    }\n  }\n  return a;\n}\n\n/**\n * Decorates all anchors in given container.\n * @param {Element} container The container element\n */\nexport function decorateAnchors(container) {\n  container.querySelectorAll('a').forEach((a) => decorateAnchor(a));\n}\n","/**\n * Creates a new document element.\n * @param {Document} document\n * @param {string} tagName\n * @param {string[]} classNames\n * @returns {Element} Created element\n */\nfunction create(document, tagName, ...classNames) {\n  const el = document.createElement(tagName);\n  if (classNames && classNames.length > 0) {\n    el.classList.add(...classNames);\n  }\n  return el;\n}\n\n/**\n * Creates a new document element and appends it to given parent.\n * @param {Element} parentElement\n * @param {string} tagName\n * @param {string[]} classNames\n * @returns {Element} Created element\n */\nexport function append(parentElement, tagName, ...classNames) {\n  const el = create(parentElement.ownerDocument, tagName, ...classNames);\n  parentElement.append(el);\n  return el;\n}\n\n/**\n * Creates a new document element and prepends it to given parent.\n * @param {Element} parentElement\n * @param {string} tagName\n * @param {string[]} classNames\n * @returns {Element} Created element\n */\nexport function prepend(parentElement, tagName, ...classNames) {\n  const el = create(parentElement.ownerDocument, tagName, ...classNames);\n  parentElement.prepend(el);\n  return el;\n}\n","/**\n * Detects the navigation type of the current page in browser.\n * If the current page was reloaded (e.g. by user), force a cache reload of items\n * fetched via Fetch API as well (e.g. footer, header, Query Index).\n * @returns Options for Fetch API.\n */\n// eslint-disable-next-line import/prefer-default-export\nexport function getFetchCacheOptions() {\n  const navigationType = window.performance.getEntriesByType('navigation')[0]?.type;\n  if (navigationType === 'reload') {\n    return { cache: 'reload' };\n  }\n  return {};\n}\n","const urlPathRegex = /^(https?:\\/\\/[^/]+)?\\/.*$/;\nconst yearPathRegex = /^\\/(\\d\\d\\d\\d)\\/(.+)?$/;\n\n/**\n * Checks if the given value is a path.\n * @param {string} value path or URL or other string\n * @returns {boolean} true if given value is a path.\n */\nexport function isPath(value) {\n  if (value) {\n    const urlPathMatch = value.match(urlPathRegex);\n    if (urlPathMatch) {\n      return urlPathMatch[1] === undefined;\n    }\n  }\n  return false;\n}\n\n/**\n * Checks if the given value is a URL.\n * @param {string} value path or URL or other string\n * @returns {boolean} true if given value is a URL\n */\nexport function isUrl(value) {\n  if (value) {\n    const urlPathMatch = value.match(urlPathRegex);\n    if (urlPathMatch) {\n      return urlPathMatch[1] !== undefined;\n    }\n  }\n  return false;\n}\n\n/**\n * Checks if the given value is a path, or a full URL.\n * @param {string} value path or URL or other string\n * @returns {boolean} true if given value is path or URL\n */\nexport function isUrlOrPath(value) {\n  if (value) {\n    return value.match(urlPathRegex) != null;\n  }\n  return false;\n}\n\n/**\n * Get pathname from given url or path.\n * @param {string} value path or URL\n * @returns {string} Path name or undefined if given string is not a path or URL.\n */\nexport function getPathName(value) {\n  if (isUrl(value)) {\n    return new URL(value).pathname;\n  }\n  if (isPath(value)) {\n    return value;\n  }\n  return undefined;\n}\n\n/**\n * Gets the document name (last part of path).\n * @param {string} value Path or URL\n * @returns {string} Document name or undefined if given string is not a path or URL.\n */\nexport function getDocumentName(value) {\n  const pathName = getPathName(value);\n  if (pathName) {\n    const lastSlash = pathName.lastIndexOf('/');\n    const documentName = pathName.substring(lastSlash + 1);\n    if (documentName !== '') {\n      return documentName;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Gets year from given path.\n * @param {string} pathName Path name.\n * @returns {number} Year or undefined\n */\nexport function getYearFromPath(pathName) {\n  const yearPathMatch = pathName.match(yearPathRegex);\n  if (yearPathMatch) {\n    return parseInt(yearPathMatch[1], 10);\n  }\n  return undefined;\n}\n","const titleSuffixPattern = /^(.+)\\s-\\s+adaptTo\\(\\)\\s+\\d+\\s*$/;\n\n/**\n * Splits a comma-separated value to array (trimming the values).\n * @param {string} value Comma-separated value\n * @returns {string[]} Value array\n */\nexport function parseCSVArray(value) {\n  if (value) {\n    return value.split(',')\n      .map((item) => item.trim())\n      .filter((item) => item !== '');\n  }\n  return [];\n}\n\n/**\n * Parses Splits a comma-separated value to array (trimming the values).\n * Falls back to parseCSVArray if string is not valid JSON.\n * @param {string} value JSON array as string\n * @returns {string[]} Value array\n */\nexport function parseJsonArray(value) {\n  if (value) {\n    try {\n      return JSON.parse(value);\n    } catch (e) {\n      // fallback\n      return parseCSVArray(value);\n    }\n  }\n  return [];\n}\n\n/**\n * Removes \" - adaptTo() XXXX\" suffix from title, if present.\n * @param {string} title Title\n * @returns {string} title Title without suffix\n */\nexport function removeTitleSuffix(title) {\n  if (title) {\n    const matchSuffixPattern = title.match(titleSuffixPattern);\n    if (matchSuffixPattern) {\n      return matchSuffixPattern[1].trim();\n    }\n  }\n  return title;\n}\n","import { parseCSVArray, parseJsonArray } from '../utils/metadata.js';\n\n/**\n * Describes data returned by query index and adds helper methods.\n */\nexport default class QueryIndexItem {\n  /** @type {string} */\n  path;\n\n  /** @type {string} */\n  title;\n\n  /** @type {string} */\n  description;\n\n  /** @type {string} */\n  keywords;\n\n  /** @type {string} */\n  robots;\n\n  /** @type {string} */\n  image;\n\n  /** @type {string} */\n  tags;\n\n  /** @type {string} Speaker: Affiliation/Company */\n  affiliation;\n\n  /** @type {string} Speaker: Twitter name e.g. \"@twitteruser\" */\n  twitter;\n\n  /** @type {string} Speaker: This speaker is an alias to given speaker path-name */\n  ['speaker-alias'];\n\n  /** @type {string} Speaker: This speaker metadata is valid upt to the given year */\n  uptoyear;\n\n  /** @type {string} Talk: Speaker assignment (speaker names or speaker path-names) */\n  speakers;\n\n  /**\n   * @returns {string[]} Robot values as array\n   */\n  getKeywords() {\n    return parseCSVArray(this.keywords);\n  }\n\n  /**\n   * @returns {string[]} Robot values as array\n   */\n  getRobots() {\n    return parseCSVArray(this.robots);\n  }\n\n  /**\n   * @returns {string[]} Tag values as array\n   */\n  getTags() {\n    return parseJsonArray(this.tags);\n  }\n\n  /**\n   * @returns {string[]} Speaker names as array\n   */\n  getSpeakers() {\n    return parseCSVArray(this.speakers);\n  }\n}\n","import { getFetchCacheOptions } from '../utils/fetch.js';\nimport { getDocumentName, getPathName, isUrlOrPath } from '../utils/path.js';\nimport QueryIndexItem from './QueryIndexItem.js';\n\nconst siteRootRegex = /^\\/\\d\\d\\d\\d\\/$/;\nconst speakerPathRegex = /^\\/speakers\\/.*$/;\nconst talkPageRegex = /^\\/\\d\\d\\d\\d\\/schedule\\/.+$/;\nconst defaultMetaImage = '/default-meta-image.png?width=1200&format=pjpg&optimize=medium';\nlet queryIndexInstance;\n\n/**\n * Gets a distinct sorted list of speaker names from all talks in given year.\n * @param {QueryIndexItem[]} items\n * @param {RegExp} filter\n */\nfunction getFilteredDistinctSortedTalkSpeakers(items, pathFilter) {\n  const speakerSet = new Set();\n  items.filter((item) => item.path.match(pathFilter))\n    .forEach((item) => {\n      item.getSpeakers().forEach((speaker) => speakerSet.add(speaker));\n    });\n  return Array.from(speakerSet).sort();\n}\n\n/**\n * Gets the speaker item variant matching to the given year, if multiple ones\n * are matching for the same speaker name.\n * Background: Speaker details and affiliation may change over years. This method\n * always picks the best match for the requested year.\n * @param {QueryIndexItem[]} speakerItems Matching speaker items\n * @param {string} siteRootPath Site root path\n * @return {QueryIndexItem} Best-matching speaker item\n */\nfunction getMatchingSpeakerVariant(speakerItems, siteRootPath) {\n  if (speakerItems.length === 0) {\n    return undefined;\n  }\n  if (speakerItems.length === 1) {\n    return speakerItems[0];\n  }\n\n  const year = parseInt(siteRootPath.substring(1, siteRootPath.length - 1), 10);\n  // sort by uptoyear, with entry without uptoyear coming last\n  speakerItems.sort((a, b) => {\n    if (!a.uptoyear) {\n      return 1;\n    }\n    if (!b.uptoyear) {\n      return -1;\n    }\n    return a.uptoyear - b.uptoyear;\n  });\n  return speakerItems.find((item) => !item.uptoyear || item.uptoyear >= year);\n}\n\n/**\n * Helper for getting information about published pages and metadata.\n */\nexport default class QueryIndex {\n  /** @type {QueryIndexItem[]} */\n  items;\n\n  /**\n   * @param {QueryIndexItem[]} items data array from query-index.json\n   */\n  constructor(items) {\n    this.items = items;\n  }\n\n  /**\n   * Get query index item by path.\n   * @param {string} path Item path\n   * @returns {QueryIndexItem} Item or undefined\n   */\n  getItem(path) {\n    return this.items.find((item) => item.path === path);\n  }\n\n  /**\n   * Get all web site root pages (for each yearly edition), newest first.\n   * @returns {QueryIndexItem[]} Query index items pointing to web site roots.\n   */\n  getAllSiteRoots() {\n    return this.items\n      .filter((item) => item.path && item.path.match(siteRootRegex))\n      .sort((item1, item2) => item1.path && item2.path && item2.path.localeCompare(item1.path));\n  }\n\n  /**\n   * Get query index item for speaker for given year.\n   * @param {string} pathOrName Speaker name or speaker document name or speaker path\n   * @param {string} siteRootPath Site root path of current year\n   * @returns {QueryIndexItem} Item or undefined\n   */\n  getSpeaker(pathOrName, siteRootPath) {\n    if (isUrlOrPath(pathOrName)) {\n      const path = getPathName(pathOrName);\n      if (path.match(speakerPathRegex)) {\n        return this.getItem(path);\n      }\n    }\n    const matchingSpeakers = this.items\n      .filter((item) => item.path.match(speakerPathRegex))\n      // check real speaker name or page document name\n      .filter((item) => (item.title === pathOrName) || (getDocumentName(item.path) === pathOrName));\n    return getMatchingSpeakerVariant(matchingSpeakers, siteRootPath);\n  }\n\n  /**\n   * Get a distinct sorted list of all speakers of main talks in given year.\n   * @param {string} siteRootPath Site root path\n   * @returns {string[]} Speaker names\n   */\n  getTalkSpeakerNames(siteRootPath) {\n    const pathFilter = new RegExp(`^${siteRootPath}schedule/[^/]+$`);\n    return getFilteredDistinctSortedTalkSpeakers(this.items, pathFilter);\n  }\n\n  /**\n   * Get a distinct sorted list of all speakers of lightning talks in given year.\n   * Speakers that also are in the list of main talk speakers are not included.\n   * @param {string} siteRootPath Site root path\n   * @returns {string[]} Speaker names\n   */\n  getLightningTalkSpeakerNames(siteRootPath) {\n    // lightning talks are always stored at sub pages one level deeper than the main talks\n    const pathFilter = new RegExp(`^${siteRootPath}schedule/[^/]+/[^/]+$`);\n    const lightningTalkSpeakerNames = getFilteredDistinctSortedTalkSpeakers(this.items, pathFilter);\n\n    // subtract main talk speaker names\n    const talkSpeakerNames = this.getTalkSpeakerNames(siteRootPath);\n    return lightningTalkSpeakerNames.filter((speaker) => !talkSpeakerNames.includes(speaker));\n  }\n\n  /**\n   * Get all talk items, sorted descending by year, ascending by title.\n   */\n  getAllTalks() {\n    return this.items\n      .filter((item) => item.path.match(talkPageRegex))\n      .sort((talk1, talk2) => {\n        const year1 = talk1.path.substring(0, 6);\n        const year2 = talk2.path.substring(0, 6);\n        if (year1 === year2) {\n          return talk1.path.localeCompare(talk2.path);\n        }\n        return year2.localeCompare(year1);\n      });\n  }\n\n  /**\n   * Get all talks for given speaker, ordered descending by year, ascending by title.\n   * @param {QueryIndexItem} speakerItem Speaker item\n   * @returns {QueryIndexItem[]} Talk items\n   */\n  getTalksForSpeaker(speakerItem) {\n    const speakerDocumentName = getDocumentName(speakerItem.path);\n    return this.getAllTalks()\n      .filter((item) => {\n        if (item.speakers) {\n          const speakers = item.getSpeakers();\n          return speakers.includes(speakerItem.title)\n              || speakers.includes(speakerDocumentName);\n        }\n        return false;\n      });\n  }\n}\n\n/**\n * Get Query Index based on query-index.json.\n * The response is cached, multiple requests to this method return ths same instance.\n */\nexport async function getQueryIndex() {\n  if (!queryIndexInstance) {\n    let data;\n    const resp = await fetch('/query-index.json', getFetchCacheOptions());\n    if (resp.ok) {\n      const json = await resp.json();\n      data = json.data;\n    }\n    data = data || [];\n    const items = data.map((item) => {\n      const queryIndexItem = Object.assign(new QueryIndexItem(), item);\n      // remove default-meta-image.png references\n      if (queryIndexItem.image === defaultMetaImage) {\n        queryIndexItem.image = undefined;\n      }\n      return queryIndexItem;\n    });\n    queryIndexInstance = new QueryIndex(items);\n  }\n  return queryIndexInstance;\n}\n\n/**\n * Clears internal cache of query index responses.\n */\nexport function clearQueryIndexCache() {\n  queryIndexInstance = undefined;\n}\n","import { append } from './dom.js';\nimport { getQueryIndex } from '../services/QueryIndex.js';\nimport { getYearFromPath } from './path.js';\n\nconst siteRootRegex = /^(\\/\\d\\d\\d\\d\\/)(.+)?$/;\nconst speakerPathRegex = /^\\/speakers\\/[^/]+$/;\nconst yearHashRegex = /^#(\\d\\d\\d\\d)$/;\n\n/**\n * Detects the root of the current site (first hierarchy level below docroot).\n * Examples:\n *   / -> /\n *   /2021/ -> /2021/\n *   /2021/mypage -> /2021/\n * @param {string} pathName Path name\n * @returns {string} Site root path\n */\nexport function getSiteRootPath(pathName) {\n  const siteRootMatch = pathName.match(siteRootRegex);\n  if (siteRootMatch) {\n    return siteRootMatch[1];\n  }\n  return '/';\n}\n\n/**\n * Detects the root of the current site (first hierarchy level below docroot).\n * This method also works for speaker pages which are outside the yearly site context.\n * It uses hash and speaker talks to detect the matching year.\n * @param {string} pathName Path name\n * @param {string} hash Hash (optional, only required for speaker pages)\n * @returns Site root path\n */\nexport async function getSiteRootPathAlsoForSpeakerPath(pathName, hash) {\n  if (pathName.match(speakerPathRegex)) {\n    const yearHashMatch = hash?.match(yearHashRegex);\n    let year;\n    if (yearHashMatch) {\n      [, year] = yearHashMatch;\n    } else {\n      const queryIndex = await getQueryIndex();\n      const speakerItem = queryIndex.getItem(pathName);\n      if (speakerItem) {\n        const speakerTalks = queryIndex.getTalksForSpeaker(speakerItem);\n        const latestTalk = speakerTalks[0];\n        if (latestTalk) {\n          year = getYearFromPath(latestTalk.path);\n        }\n      }\n    }\n    if (year) {\n      return `/${year}/`;\n    }\n  }\n  // fallback to normal site root detection\n  return getSiteRootPath(pathName);\n}\n\n/**\n * Gets parent path. Topmost parent path is the site root.\n * @param {string} pathName Path name\n * @returns {string} Parent path or undefined if the path is already site root or invalid.\n */\nexport function getParentPath(pathName) {\n  const siteRoot = getSiteRootPath(pathName);\n  if (pathName !== siteRoot && siteRoot !== '/') {\n    const lastSlash = pathName.lastIndexOf('/');\n    if (lastSlash === siteRoot.length - 1) {\n      return siteRoot;\n    }\n    return pathName.substring(0, lastSlash);\n  }\n  return undefined;\n}\n\n/**\n * Build page path in current site.\n * @param {string} pathName Path name\n * @param {string} path relative path inside site (without leading slash)\n * @returns {string} Path\n */\nfunction getRelativePath(pathName, path) {\n  const siteRoot = getSiteRootPath(pathName);\n  return `${siteRoot}${path}`;\n}\n\n/**\n * Build path to schedule page in current site.\n * @param {string} pathName Path name\n * @returns {string} Path\n */\nexport function getSchedulePath(pathName) {\n  return getRelativePath(pathName, 'schedule');\n}\n\n/**\n * Build path to archive page in current site.\n * @param {string} pathName Path name\n * @returns {string} Path\n */\nexport function getArchivePath(pathName) {\n  return getRelativePath(pathName, 'archive');\n}\n\n/**\n * Build path to speaker overview page in current site.\n * @param {string} pathName Path name\n * @returns {string} Path\n */\nexport function getSpeakerOverviewPath(pathName) {\n  return getRelativePath(pathName, 'conference/speaker');\n}\n\n/**\n * Get path to speaker detail page (in context of given year).\n * @typedef {import('../services/QueryIndexItem').default} QueryIndexItem\n * @param {QueryIndexItem} speakerItem Speaker item\n * @param {string} pathName Path name\n */\nexport function getSpeakerDetailPath(speakerItem, pathName) {\n  const year = getYearFromPath(pathName);\n  return `${speakerItem.path}#${year}`;\n}\n\n/**\n * Checks if given path is a speaker detail page.\n * @param {string} pathName Path name\n * @returns true if path points to a speaker detail page\n */\nexport function isSpeakerDetailPath(pathName) {\n  return pathName.match(speakerPathRegex) != null;\n}\n\n/**\n * Adds archive links pointing to other yearly edition websites.\n * The links are added to the ul of the last li item.\n * @param {Element} nav Navigation element\n */\nexport async function addArchiveLinks(nav) {\n  const navItems = nav.querySelectorAll(':scope > ul > li');\n  const lastNavItem = navItems[navItems.length - 1];\n  if (lastNavItem) {\n    let ul = lastNavItem.querySelector(':scope > ul');\n    if (!ul) {\n      ul = append(lastNavItem, 'ul');\n    }\n    const queryIndex = await getQueryIndex();\n    queryIndex.getAllSiteRoots().forEach((siteRoot) => {\n      const listItem = append(ul, 'li');\n      const link = append(listItem, 'a');\n      link.href = siteRoot.path;\n      link.textContent = siteRoot.title;\n    });\n  }\n}\n","import {\n  sampleRUM,\n  buildBlock,\n  loadHeader,\n  loadFooter,\n  decorateIcons,\n  decorateSections,\n  decorateBlocks,\n  decorateTemplateAndTheme,\n  waitForLCP,\n  loadBlocks,\n  loadCSS,\n  getMetadata,\n} from './lib-franklin.js';\nimport { decorateAnchors } from './services/LinkHandler.js';\nimport { append } from './utils/dom.js';\nimport { getSiteRootPath, isSpeakerDetailPath } from './utils/site.js';\n\nconst LCP_BLOCKS = []; // add your LCP blocks to the list\nwindow.hlx.RUM_GENERATION = 'project-1'; // add your RUM generation information here\n\n/**\n * Extracts the stage header block and prepends a new section for it.\n * @param {Element} main\n */\nfunction extractStageHeader(main) {\n  // insert stage-header section in any case for grid layout - even if there is no content for it\n  const section = document.createElement('div');\n  section.classList.add('stage-header-section');\n  main.prepend(section);\n\n  // move stage header to new section\n  const stageHeader = main.querySelector('.stage-header');\n  if (stageHeader) {\n    section.appendChild(stageHeader);\n  }\n}\n\n/**\n * Auto-builds speaker detail block in speaker page.\n * @param {Element} main The container element\n */\nfunction decorateSpeakerPage(main) {\n  if (isSpeakerDetailPath(window.location.pathname)) {\n    const section = main.querySelector(':scope > div');\n    if (section) {\n      section.prepend(buildBlock('speaker-detail', { elems: Array.from(section.children) }));\n    }\n  }\n}\n\n/**\n * Inserts new section with talk detail components.\n * @param {Element} main The container element\n */\nfunction decorateTalkDetailPage(main) {\n  if (getMetadata('theme') === 'talk-detail') {\n    const firstSection = main.querySelector(':scope > div');\n    if (firstSection) {\n      // add block after headline before outline\n      const h1 = firstSection.querySelector(':scope > h1');\n      const talkDetailBeforeOutline = document.createElement('div');\n      talkDetailBeforeOutline.classList.add('talk-detail-before-outline');\n      if (h1.nextSibling) {\n        firstSection.insertBefore(talkDetailBeforeOutline, h1.nextSibling);\n      } else {\n        firstSection.append(talkDetailBeforeOutline);\n      }\n      // add block after outline\n      const talkDetailAfterOutline = document.createElement('div');\n      talkDetailAfterOutline.classList.add('talk-detail-after-outline');\n      firstSection.append(talkDetailAfterOutline);\n    }\n    // add new section with footer block\n    const footerSection = document.createElement('div');\n    main.append(footerSection);\n    const talkDetailFooter = document.createElement('div');\n    talkDetailFooter.classList.add('talk-detail-footer');\n    footerSection.append(talkDetailFooter);\n  }\n}\n\n/**\n * Builds a fragment block\n * @param {string} fragmentRef Local path to fragment (without site root)\n * @returns Fragment block element\n */\nfunction buildFragmentBlock(fragmentRef) {\n  const siteRootPath = getSiteRootPath(window.location.pathname);\n  const fragmentPath = `${siteRootPath}${fragmentRef}`;\n  const fragmentLink = document.createElement('a');\n  fragmentLink.setAttribute('href', fragmentPath);\n  fragmentLink.innerText = fragmentPath;\n  return buildBlock('fragment', fragmentLink);\n}\n\n/**\n * Appends a new section with the aside bar fragment,\n * if it is not disabled for this page via metadata.\n * @param {Element} main The container element\n */\nfunction appendAsideBar(main) {\n  if (getMetadata('include-aside-bar') === 'false') {\n    return;\n  }\n  const fragment = buildFragmentBlock('fragments/aside-bar');\n  const section = document.createElement('div');\n  section.classList.add('aside-bar-section');\n  section.appendChild(fragment);\n  main.append(section);\n}\n\n/**\n * Appends a new section with the teaser bar fragment,\n * if it is not disabled for this page via metadata.\n * @param {Element} main The container element\n */\nfunction appendTeaserBar(main) {\n  if (getMetadata('include-teaser-bar') === 'false') {\n    return;\n  }\n  const fragment = buildFragmentBlock('fragments/teaser-bar');\n  const section = document.createElement('div');\n  section.classList.add('teaser-bar-section');\n  section.appendChild(fragment);\n  main.append(section);\n}\n\n/**\n * Builds all synthetic blocks in a container element.\n * @param {Element} main The container element\n */\nfunction buildAutoBlocks(main) {\n  try {\n    decorateSpeakerPage(main);\n    decorateTalkDetailPage(main);\n    extractStageHeader(main);\n    appendAsideBar(main);\n    appendTeaserBar(main);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Auto Blocking failed', error);\n  }\n}\n\n/**\n * Decorates the main element.\n * @param {Element} main The main element\n * @param {boolean} insideFragment Decorate main block inside a fragment\n */\n// eslint-disable-next-line import/prefer-default-export\nexport function decorateMain(main, insideFragment) {\n  decorateIcons(main);\n  decorateAnchors(main);\n  if (!insideFragment) {\n    buildAutoBlocks(main);\n  }\n  decorateSections(main);\n  decorateBlocks(main);\n}\n\n/**\n * Add static elements to header.\n * @param {Element} header Header element\n */\nfunction addStaticHeaderElements(header) {\n  const container = append(header, 'div', 'header-container');\n  const logoLink = append(container, 'a', 'logo');\n  logoLink.id = 'top';\n  append(logoLink, 'div');\n  append(header, 'div', 'nav-background');\n}\n\n/**\n * Applies template and theme as defined in document's metadata. Additionally,\n * if no template is set, a default template is derived based on \"include-aside-bar\" status.\n * Supported templates are:\n * - content-3col (default)\n * - content-4col (default with include-aside-bar=false)\n * - content-2col\n */\nfunction decorateTemplateAndThemeWithAutoDetection() {\n  decorateTemplateAndTheme();\n  let template = getMetadata('template');\n  if (!template) {\n    if (getMetadata('include-aside-bar') === 'false') {\n      template = 'content-4col';\n    } else {\n      template = 'content-3col';\n    }\n    document.body.classList.add(template);\n  }\n}\n\n/**\n * loads everything needed to get to LCP.\n */\nasync function loadEager(doc) {\n  document.documentElement.lang = 'en';\n  const header = doc.querySelector('header');\n  if (header) {\n    addStaticHeaderElements(header);\n  }\n  decorateTemplateAndThemeWithAutoDetection();\n  const main = doc.querySelector('main');\n  if (main) {\n    decorateMain(main);\n    await waitForLCP(LCP_BLOCKS);\n  }\n}\n\n/**\n * loads everything that doesn't need to be delayed.\n */\nasync function loadLazy(doc) {\n  const main = doc.querySelector('main');\n  await loadBlocks(main);\n\n  const { hash } = window.location;\n  const element = hash ? doc.getElementById(hash.substring(1)) : false;\n  if (hash && element) element.scrollIntoView();\n\n  loadHeader(doc.querySelector('header .header-container'));\n  loadFooter(doc.querySelector('footer'));\n\n  loadCSS(`${window.hlx.codeBasePath}/styles/lazy-styles.css`);\n  sampleRUM('lazy');\n  sampleRUM.observe(main.querySelectorAll('div[data-block-name]'));\n  sampleRUM.observe(main.querySelectorAll('picture > img'));\n}\n\n/**\n * loads everything that happens a lot later, without impacting\n * the user experience.\n */\nfunction loadDelayed() {\n  // eslint-disable-next-line import/no-cycle\n  window.setTimeout(() => import('./delayed.js'), 3000);\n  // load anything that can be postponed to the latest here\n}\n\nasync function loadPage() {\n  await loadEager(document);\n  await loadLazy(document);\n  loadDelayed();\n}\n\nloadPage();\n"],"names":["sampleRUM","checkpoint","data","defer","fnname","args","push","drain","dfnname","fn","filter","forEach","on","chkpnt","cases","window","hlx","rum","weight","URLSearchParams","location","search","get","id","s","split","reduce","a","b","charCodeAt","hashCode","href","Date","getTime","Math","random","toString","substr","isSelected","sendPing","pdata","body","JSON","stringify","referer","generation","RUM_GENERATION","url","navigator","sendBeacon","console","debug","cwv","lazy","script","document","createElement","src","head","appendChild","error","loadCSS","callback","querySelector","link","setAttribute","onload","e","type","onerror","getMetadata","name","attr","includes","querySelectorAll","map","m","content","join","toClassName","toLowerCase","replace","decorateBlock","block","shortBlockName","classList","add","parentElement","section","closest","readBlockConfig","config","row","children","cols","col","textContent","value","as","length","imgs","img","ps","p","decorateSections","main","wrappers","defaultContent","tagName","wrapper","append","sectionMeta","meta","Object","keys","key","style","trim","dataset","g","toUpperCase","parentNode","remove","updateSectionsStatus","sections","i","getAttribute","buildBlock","blockName","table","Array","isArray","blockEl","rowEl","colEl","elems","val","innerHTML","async","loadBlock","status","cssLoaded","Promise","resolve","codeBasePath","decorationComplete","mod","__variableDynamicImportRuntime0__","default","log","all","loadBlocks","blocks","createOptimizedPicture","alt","eager","breakpoints","media","width","URL","picture","pathname","ext","substring","lastIndexOf","br","source","lighthouse","scriptEl","setup","addEventListener","event","reason","sourceURL","target","line","filename","lineno","adaptToSiteUrlRegex","downloadUrlRegex","Link","constructor","this","adaptToSiteUrlMatch","match","isAdaptToSiteUrl","getAdaptToSiteUrlPath","isDownload","decorateAnchors","container","decorateAnchor","create","classNames","el","ownerDocument","prepend","getFetchCacheOptions","navigationType","performance","getEntriesByType","cache","urlPathRegex","yearPathRegex","isUrlOrPath","getPathName","urlPathMatch","undefined","isUrl","isPath","getDocumentName","pathName","lastSlash","documentName","getYearFromPath","yearPathMatch","parseInt","titleSuffixPattern","parseCSVArray","item","removeTitleSuffix","title","matchSuffixPattern","QueryIndexItem","path","description","keywords","robots","image","tags","affiliation","twitter","uptoyear","speakers","getKeywords","getRobots","getTags","parse","parseJsonArray","getSpeakers","siteRootRegex","speakerPathRegex","talkPageRegex","defaultMetaImage","queryIndexInstance","getFilteredDistinctSortedTalkSpeakers","items","pathFilter","speakerSet","Set","speaker","from","sort","QueryIndex","getItem","find","getAllSiteRoots","item1","item2","localeCompare","getSpeaker","pathOrName","siteRootPath","speakerItems","year","getMatchingSpeakerVariant","getTalkSpeakerNames","RegExp","getLightningTalkSpeakerNames","lightningTalkSpeakerNames","talkSpeakerNames","getAllTalks","talk1","talk2","year1","year2","getTalksForSpeaker","speakerItem","speakerDocumentName","getQueryIndex","resp","fetch","ok","json","queryIndexItem","assign","yearHashRegex","getSiteRootPath","siteRootMatch","getSiteRootPathAlsoForSpeakerPath","hash","yearHashMatch","queryIndex","latestTalk","getParentPath","siteRoot","getRelativePath","getSchedulePath","getArchivePath","getSpeakerOverviewPath","getSpeakerDetailPath","addArchiveLinks","nav","navItems","lastNavItem","ul","listItem","LCP_BLOCKS","decorateSpeakerPage","buildFragmentBlock","fragmentRef","fragmentPath","fragmentLink","innerText","buildAutoBlocks","firstSection","h1","talkDetailBeforeOutline","nextSibling","insertBefore","talkDetailAfterOutline","footerSection","talkDetailFooter","decorateTalkDetailPage","stageHeader","extractStageHeader","fragment","appendAsideBar","appendTeaserBar","decorateMain","insideFragment","element","span","startsWith","icon","iconHTML","text","encodeURIComponent","decorateIcons","decorateBlocks","decorateTemplateAndThemeWithAutoDetection","addClasses","elem","classes","v","template","theme","decorateTemplateAndTheme","loadEager","doc","documentElement","lang","header","logoLink","addStaticHeaderElements","lcpBlocks","lcpCandidate","complete","waitForLCP","loadLazy","getElementById","scrollIntoView","headerBlock","loadHeader","footer","footerBlock","loadFooter","observe","setTimeout","import","loadPage"],"mappings":"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"}