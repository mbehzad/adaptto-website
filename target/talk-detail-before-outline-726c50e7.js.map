{"version":3,"file":"talk-detail-before-outline-726c50e7.js","sources":["../blocks/talk-detail-before-outline/talk-detail-before-outline.js"],"sourcesContent":["import { decorateBlock, getMetadata, loadBlocks } from '../../scripts/lib-franklin.js';\nimport { getScheduleData } from '../../scripts/services/ScheduleData.js';\nimport { formatDateFull, formatTime } from '../../scripts/utils/datetime.js';\nimport { append } from '../../scripts/utils/dom.js';\nimport { parseCSVArray } from '../../scripts/utils/metadata.js';\nimport { getArchivePath, getSiteRootPath } from '../../scripts/utils/site.js';\n\n/**\n * Build talk tags (with link to talk archive).\n * @param {Element} parent\n */\nfunction buildTalkTags(parent) {\n  const tags = parseCSVArray(getMetadata('article:tag'));\n  if (tags.length === 0) {\n    return;\n  }\n\n  const ul = append(parent, 'ul', 'talk-tags');\n  tags.forEach((tag) => {\n    const li = append(ul, 'li');\n    const a = append(li, 'a');\n    a.href = `${getArchivePath(document.location.pathname)}#tags=${encodeURIComponent(tag)}`;\n    a.textContent = tag;\n  });\n}\n\n/**\n * Build talk schedule time info.\n * @typedef {import('../../scripts/services/ScheduleEntry').default} ScheduleEntry\n * @param {Element} parent\n * @param {ScheduleEntry} entry\n */\nfunction buildTimeInfo(parent, entry) {\n  const p = append(parent, 'p');\n  p.append(`${formatDateFull(entry.start)} ${formatTime(entry.start)} - ${formatTime(entry.end)}`);\n  p.append(` (${entry.duration} min`);\n  if (entry.durationFAQ > 0) {\n    p.append(` + ${entry.durationFAQ} min FAQ`);\n  }\n  p.append(')');\n}\n\n/**\n * Build talk video (via embed block).\n * @param {Element} parent\n */\nfunction buildVideo(parent) {\n  const video = getMetadata('video');\n  if (!video) {\n    return;\n  }\n\n  const block = append(parent, 'div', 'embed-youtube');\n  const a = append(block, 'a');\n  a.href = video;\n  a.textContent = video;\n  decorateBlock(block);\n  loadBlocks(parent);\n}\n\n/**\n * Talk detail before outline: Tags, time info and video.\n * @param {Element} block\n */\nexport default async function decorate(block) {\n  block.textContent = '';\n\n  // get schedule entry for talk\n  const siteRoot = getSiteRootPath(document.location.pathname);\n  const scheduleData = await getScheduleData(`${siteRoot}schedule-data.json`);\n  const scheduleEntry = scheduleData.getTalkEntry(document.location.pathname);\n\n  buildTalkTags(block);\n  if (scheduleEntry) {\n    buildTimeInfo(block, scheduleEntry);\n  }\n  buildVideo(block);\n  append(block, 'h4').textContent = 'Outline';\n}\n"],"names":["async","decorate","block","textContent","siteRoot","getSiteRootPath","document","location","pathname","scheduleEntry","getScheduleData","getTalkEntry","parent","tags","parseCSVArray","getMetadata","length","ul","append","forEach","tag","li","a","href","getArchivePath","encodeURIComponent","buildTalkTags","entry","p","formatDateFull","start","formatTime","end","duration","durationFAQ","buildTimeInfo","video","decorateBlock","loadBlocks","buildVideo"],"mappings":"wIAgEeA,eAAeC,EAASC,GACrCA,EAAMC,YAAc,GAGpB,MAAMC,EAAWC,EAAgBC,SAASC,SAASC,UAE7CC,SADqBC,EAAgB,GAAGN,wBACXO,aAAaL,SAASC,SAASC,WA3DpE,SAAuBI,GACrB,MAAMC,EAAOC,EAAcC,EAAY,gBACvC,GAAoB,IAAhBF,EAAKG,OACP,OAGF,MAAMC,EAAKC,EAAON,EAAQ,KAAM,aAChCC,EAAKM,SAASC,IACZ,MAAMC,EAAKH,EAAOD,EAAI,MAChBK,EAAIJ,EAAOG,EAAI,KACrBC,EAAEC,KAAO,GAAGC,EAAelB,SAASC,SAASC,kBAAkBiB,mBAAmBL,KAClFE,EAAEnB,YAAciB,CAAG,GAEvB,CAgDEM,CAAcxB,GACVO,GAzCN,SAAuBG,EAAQe,GAC7B,MAAMC,EAAIV,EAAON,EAAQ,KACzBgB,EAAEV,OAAO,GAAGW,EAAeF,EAAMG,UAAUC,EAAWJ,EAAMG,YAAYC,EAAWJ,EAAMK,QACzFJ,EAAEV,OAAO,KAAKS,EAAMM,gBAChBN,EAAMO,YAAc,GACtBN,EAAEV,OAAO,MAAMS,EAAMO,uBAEvBN,EAAEV,OAAO,IACX,CAkCIiB,CAAcjC,EAAOO,GA5BzB,SAAoBG,GAClB,MAAMwB,EAAQrB,EAAY,SAC1B,IAAKqB,EACH,OAGF,MAAMlC,EAAQgB,EAAON,EAAQ,MAAO,iBAC9BU,EAAIJ,EAAOhB,EAAO,KACxBoB,EAAEC,KAAOa,EACTd,EAAEnB,YAAciC,EAChBC,EAAcnC,GACdoC,EAAW1B,EACb,CAkBE2B,CAAWrC,GACXgB,EAAOhB,EAAO,MAAMC,YAAc,SACpC"}